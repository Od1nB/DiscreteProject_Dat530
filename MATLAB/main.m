clear all; clc;

global global_info;
%Load data from file
%[busNr, departures, routeTime, deviation, changeDriver,...
%    changeDriverStop, changeDriverTime] = loadData('busRoutes.xlsx');
global_info.STOP_AT = 100; %Stop after 50 time units, as this is timed P/T

%Petri Net structure
pns = pnstruct({'connector_pdf',...
    'generator_pdf',...
    'preparation_pdf',...
    'routes_pdf',...
    'driving_pdf',...
    'cleanup_pdf',...
    });

% firing times
% these firing times will be changed to be stochastic with rand func

dyn.ft = {'tBusDriverGenerator', 1,...
    'tCONNECT1', 1,...
    'tCONNECT2', 1,...
    'tCONNECT3', 1,...
    'tCONNECT4', 1,...
    'tCONNECT5', 1,...
    'tChangeDriver', 1,...
    'tCheckOut', 1,...
    'tDriveToBusStopBus', 1,...
    'tDriveToBusStopCar', 1,...
    'tGenerator', 1,...
    'tLobby', 1,...
    'tPick_up_bus_from_parking', 1,...
    'tPick_up_car', 1,...
    'tRoute3', 1,...
    'tRoute3_complete', 1,...
    'tRoute5', 1,...
    'tRoute5_complete', 1,...
    'tRoute6', 1,...
    'tRoute6_complete', 1,...
    'postChange_tRoutex60', 1,...
    'postChange_tRoutex60_complete', 1,...
    'preChange_tRoutex60', 1,...
    'preChange_tRoutex60_complete', 1,...
    'tTakeBusToParking', 1,...
    'tTakeCarToParking', 1,...
    'tWait', 1,...
    };

% initial state
dyn.m0 ={'pAdministration', 4}; %inital tokens

%Resources
%dynamicpart.re = {'bus',4,inf};
pni = initialdynamics(pns,dyn);


%Run Simulation
sim = gpensim(pni);
%prnsys(sim);
prnss(sim); % print the simulation results 
plotp(sim, {'pOnRoute3', 'pOnRoute5','pOnRoute6', 'preChange_pOnRoutex60',...
    'postChange_pOnRoutex60'}) %plot routes
%plotp(sim, {'pWait','pBussdriver',...
 %   'pBussRouteDone','pCheckedOut'}); % plot the results
%prnfinalcolors(sim);